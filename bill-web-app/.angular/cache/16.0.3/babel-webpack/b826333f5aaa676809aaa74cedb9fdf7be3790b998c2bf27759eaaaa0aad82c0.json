{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nfunction CustomersComponent_table_1_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CustomersComponent_table_1_tr_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const c_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.getBill(c_r2));\n    });\n    i0.ɵɵtext(9, \" Factures \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.email, \"\");\n  }\n}\nfunction CustomersComponent_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"thead\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Email\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, CustomersComponent_table_1_tr_11_Template, 10, 3, \"tr\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.customers._embedded.customers);\n  }\n}\nclass CustomersComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.http.get('http://localhost:8888/CUSTOMER-SERVICE/customers').subscribe({\n      next: data => {\n        this.customers = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  getBill(c) {\n    this.router.navigateByUrl(\"/bill/\" + c.id);\n  }\n}\nCustomersComponent.ɵfac = function CustomersComponent_Factory(t) {\n  return new (t || CustomersComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nCustomersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomersComponent,\n  selectors: [[\"app-customers\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"table\", 4, \"ngIf\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function CustomersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CustomersComponent_table_1_Template, 12, 1, \"table\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.customers);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CustomersComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CustomersComponent_table_1_tr_11_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r4","c_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","getBill","ɵɵadvance","ɵɵtextInterpolate1","id","name","email","ɵɵelement","ɵɵtemplate","CustomersComponent_table_1_tr_11_Template","ɵɵproperty","ctx_r0","customers","_embedded","CustomersComponent","constructor","http","router","ngOnInit","get","subscribe","next","data","error","err","console","log","c","navigateByUrl","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","CustomersComponent_Template","rf","ctx","CustomersComponent_table_1_Template"],"sources":["C:\\Users\\kmhas\\Desktop\\M2\\SD\\TP5-t\\bill-web-app\\src\\app\\customers\\customers.component.ts","C:\\Users\\kmhas\\Desktop\\M2\\SD\\TP5-t\\bill-web-app\\src\\app\\customers\\customers.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers : any;\n  err!:any;\n  constructor(private  http:HttpClient , private  router : Router) { }\n\n  ngOnInit(): void {\n    this.http.get('http://localhost:8888/CUSTOMER-SERVICE/customers').subscribe(\n      { next:(data)=>{\n          this.customers = data;\n        },\n        error : (err)=>{ console.log(err); }\n\n      });\n  }\n\n  getBill(c: any) {\n    this.router.navigateByUrl(\"/bill/\"+c.id)\n\n  }\n}\n\n\n// http://localhost:8888/BILLING-SERVICE/bills/1/productItems\n","<div class=\"container\">\n  <table class =\"table\" *ngIf=\"customers\">\n    <thead>\n    <br>\n    <tr>\n      <th>ID</th><th>Name</th><th>Email</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor =\"let c of customers._embedded.customers\">\n      <td> {{c.id}}</td>\n      <td> {{c.name}}</td>\n      <td> {{c.email}}</td>\n      <td>\n        <button class =\"btn btn-success\" (click)=\"getBill(c)\"> Factures </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}